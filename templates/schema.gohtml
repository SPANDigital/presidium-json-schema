{{- define "schema" }}
{{- $anchor := anchorize .Location -}}
{{ $name := firstNonEmpty .Title (humanize .Location) }}

{{- if gt (len .Types) 0 -}}
**Type:** {{ join .Types ", " }}
{{- end }}
{{ if .Description }}
**Description:** {{.Description}}
{{ end }}

{{ template "validations" . }}
{{ if .Properties }}
    {{- template "tableHeader" "Properties:" -}}
    {{- range $name, $property := .Properties -}}
        {{- template "property" dict "Name" $name "Property" $property -}}
    {{- end -}}
{{- end }}

{{ if .PatternProperties }}
    {{- template "tableHeader" "Pattern Properties:" -}}
    {{- range $name, $property := .PatternProperties -}}
        {{- template "property" dict "Name" (escapeRegex $name) "Property" $property -}}
    {{- end -}}
{{- end }}

{{- if .Items -}}
    {{- template "tableHeader" "Array Items:" -}}
    {{- if isSlice .Items -}}
        {{- range $idx, $property := .Items -}}
            {{- template "property" dict "Name" (printf "ItemType[%d]" $idx) "Property" $property -}}
        {{- end -}}
    {{- else -}}
        {{- template "property" dict "Name" "ItemType" "Property" .Items -}}
    {{- end -}}
{{- end -}}

{{- if .Items2020 -}}
    {{- template "tableHeader" "Array Items:" -}}
    {{- template "property" dict "Name" "ItemType" "Property" .Items2020 -}}
{{- end -}}

{{- if .AllOf }}
    {{- template "tableHeader" "AllOf:" -}}
    {{- template "typeof" dict "Title" "AllOf" "Items" .AllOf -}}
{{- end -}}

{{- if .AnyOf -}}
    {{- template "tableHeader" "AnyOf:" -}}
    {{- template "typeof" dict "Title" "AnyOf" "Items" .AnyOf -}}
{{- end -}}

{{- if .OneOf }}
    {{- template "tableHeader" "OneOf:" -}}
    {{- template "typeof" dict "Title" "OneOf" "Items" .OneOf -}}
{{- end -}}

{{ end }}

{{- define "tableHeader" -}}
### {{.}}
| Name | Types | Description | Restrictions |
|------|------|-------------|--------------|
{{- end -}}
